<%- include('partials/head.ejs') %>
<%- include('partials/navbar.ejs') %>

<% if (isLoggedIn === false) { %>
  <meta http-equiv="refresh" content="0; URL=/users/login"/>
<% } %>

  <main class="container">

    <h1>Personajes</h1>
      
    <label for="buscar">Buscar</label>
    <input type="hidden" id="_csrf" name="_csrf" value="<%= csrfToken %>">
    <input type="text" name="buscar" id="buscar" onkeyup="buscar()">
    
    <div class=row id="resultados">
      
      <% for (let personaje of lista_personajes) { %>
        <div class="col s12 m4 l3">
          <div class="card small">
              <div class="card-image waves-effect waves-block waves-light">
                <img class="activator" src="<%= personaje.imagen %>">
              </div>
              <div class="card-content">
                <span class="card-title activator grey-text text-darken-4"><%= personaje.nombre %><i class="material-icons right">more_vert</i></span>
                <p><a href="#">...</a></p>
              </div>
              <div class="card-reveal">
                <span class="card-title grey-text text-darken-4"><%= personaje.nombre %><i class="material-icons right">close</i></span>
                <p>Fuente de la imagen: <%= personaje.imagen %></p>
              </div>
          </div>
        </div>
      <% } %>

    </div>

    <% if (isLoggedIn === true) { %>
      <a href="/personajes/nuevo-personaje" class="waves-effect waves-light btn red"><i class="material-icons left">add</i>Añadir personaje</a>
    <% } %>

    <p></p>

    <a href="/" class="waves-effect waves-light btn green"><i class="material-icons left">arrow_back</i>Volver</a>
    <p></p>
    <br>
    
    <div class="card">
      <div style="padding:3rem;">
        <h4>Preguntas:</h4>
        <br>
        
        <ul>
          <li>
            <strong>Elabora un diagrama y explica cómo funciona AJAX.</strong>
            <p><img src="/images/diagrama.png"></p>
            <p>Funciona mediante una petición que se le realiza al servidor, esto incluye una o más variables y de forma asíncrona para que no se detenga la actividad del usuario o de la página, los datos son entregados para evitar lo anterior y actualizar de forma dinámica el html mediante un script incluído.</p>
          </li>
          
          <br>

          <li>
            <strong>¿Qué alternativas a jQuery existen?</strong>
            <p>R= El propio fetch de JavaScript.</p>
          </li>
          
          <br>

          <li>
            <strong>¿Qué es una promesa en js?</strong>
            <p>R= Son objetos de JavaScript que se comportan como callbacks y se usan para retornar algún valor porque aún no se conoce sin que la web se bloquee.</p>
          </li>

          <br>

          <li>
            <strong>¿Cómo funcionan async y await?</strong>
            <p>R= Mediante la misma base de promesas, de forma asíncrona. Async extiende la síntaxis de JavaScript y await trata las funciones en el código como objetos síncronos que dan un valor en vez de una promesa.</p>
          </li>
        </ul>
      </div>
    </div>

  </main>

<%- include('partials/footer.ejs') %>

<script>
  function buscar() {
    const valor_busqueda = document.getElementById('buscar').value;
    //El token de protección CSRF
    const csrf = document.getElementById('_csrf').value;

    let data = {valor_busqueda: valor_busqueda};
    console.log(valor_busqueda);
    //función que manda la petición asíncrona
    fetch('/personajes/buscar', {
        method: 'POST',
        body: JSON.stringify(data),
        headers: {
            'csrf-token': csrf,
            'Content-Type': 'application/json'
          },
    }).then(result => {
        return result.json(); //Regresa otra promesa
    }).then(data => {
        //Modificamos el DOM de nuestra página de acuerdo a los datos de la segunda promesa
        console.log(data);
        let html = '';
        for (let personaje of data) {
          html += '<div class="col s12 m4 l3">' + 
                  '<div class="card small">' + 
                      '<div class="card-image waves-effect waves-block waves-light">' +
                        '<img class="activator" src="'+ personaje.imagen +'">' +
                      '</div>' +
                      '<div class="card-content">' +
                        '<span class="card-title activator grey-text text-darken-4">' + personaje.nombre + '<i class="material-icons right">more_vert</i></span>' +
                        '<p><a href="#">...</a></p>' +
                      '</div>' +
                      '<div class="card-reveal">' +
                        '<span class="card-title grey-text text-darken-4">'+ personaje.nombre +'<i class="material-icons right">close</i></span>' +
                        '<p>Fuente de la imagen: '+ personaje.imagen +'</p>' +
                      '</div>' +
                    '</div>' +
                  '</div>';
        }
        document.getElementById("resultados").innerHTML = html;

    }).catch(err => {
        console.error(err);
    });
  }
</script>